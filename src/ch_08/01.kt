package ch_08

/*
코틀린은 null 값 처리에 많은 공을 들인 언어
null은 프로그래밍하면서 항상 이슈의 중심에 있는데 null 로 인해 프로글매 전체, 혹은 앱 전체가 멈출수 있기 때문.

프로그램이 멈출 수 있는 상황을 코드로 만들어 봄
1개의 메서드를 가진 클래스를 만듬.
 */
class One {
    fun printMe() {
        print("null safety")
    }
}
/*
main() 함수안에 one 변수를 하나 선언하고 타입으로 클래스 지정.
그리고 특정 조건이 만족할 때만 선언한 변수에 생성자를 호출해서 저장하는 조건문 if를 만듬
그리고 변수를 통해 해당 클래스의 메서드를 호출
 */
fun main() {
    var one: One
    if (1 > 2) {
        one = One()
    }
//    one.printMe()
}
/*
이 코드에서 조건이 false 이기 때문에 one 변수는 아무것도 없는 null 상태가 됨
print 메서드를 호출하면 null 포인터 예외가 발생하면서 프로그램이 다운,
물론 IDE에서 오류를 발생시켜 컴파일되지 않도록 해줌.
코틀린은 이런 상황을 방지하기 이해 안전장치를 마련해 둠, 그 결과물이 Null Safety
 */